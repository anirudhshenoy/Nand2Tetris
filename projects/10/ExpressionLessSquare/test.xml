<class>
	<keyword>class</keyword>
	<identifier>Main</identifier>
	<symbol>{</symbol>
	<classVarDec>
		<keyword>static</keyword>
		<keyword>boolean</keyword>
		<identifier>test</identifier>
		<symbol>;</symbol>
	</classVarDec>
	<subroutineDec>
		<keyword>function</keyword>
		<keyword>void</keyword>
		<identifier>main</identifier>
		<symbol>(</symbol>
		<parameterList> </parameterList>
		<symbol>)</symbol>
		<subroutineBody>
			<symbol>{</symbol>
			<varDec>
				<keyword>var</keyword>
				<keyword>SquareGame</keyword>
				<identifier>game</identifier>
				<symbol>;</symbol>
			</varDec>
			<statements>
				<letStatements>
					<keyword>let</keyword>
					<identifier>game</identifier>
					<symbol>=</symbol>
					<symbol>;</symbol>
				</letStatements>
			</statements>
			<statements>
				<doStatements>
					<keyword>do</keyword>
					<identifier>game</identifier>
				</doStatements>
			</statements>
			<statements/>
			<statements/>
			<statements>
				<doStatements>
					<keyword>do</keyword>
					<identifier>game</identifier>
				</doStatements>
			</statements>
			<statements/>
			<statements/>
			<statements>
				<doStatements>
					<keyword>return</keyword>
					<identifier>;</identifier>
				</doStatements>
			</statements>
			<statements/>
			<statements/>
			<statements/>
			<statements/>
			<varDec>
				<keyword>var</keyword>
				<keyword>int</keyword>
				<identifier>i</identifier>
				<symbol>,</symbol>
				<symbol>;</symbol>
			</varDec>
			<varDec>
				<keyword>var</keyword>
				<symbol>;</symbol>
			</varDec>
			<varDec>
				<keyword>var</keyword>
				<symbol>;</symbol>
			</varDec>
			<statements>
				<ifStatements>
					<keyword>if</keyword>
					<symbol>(</symbol>
				</ifStatements>
			</statements>
			<statements/>
			<statements/>
			<statements>
				<letStatements>
					<keyword>let</keyword>
					<identifier>s</identifier>
					<symbol>=</symbol>
					<symbol>;</symbol>
				</letStatements>
			</statements>
			<statements>
				<letStatements>
					<keyword>let</keyword>
					<identifier>s</identifier>
					<symbol>=</symbol>
					<symbol>;</symbol>
				</letStatements>
			</statements>
			<statements>
				<letStatements>
					<keyword>let</keyword>
					<identifier>a</identifier>
					<symbol>[</symbol>
					<symbol>i</symbol>
				</letStatements>
			</statements>
			<statements/>
			<statements/>
			<statements/>
			<statements/>
		</subroutineBody>
		<symbol>}</symbol>
	</subroutineDec>
</class>
