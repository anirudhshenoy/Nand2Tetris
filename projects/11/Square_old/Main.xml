<class>
	<keyword>class</keyword>
	<identifier>Main</identifier>
	<symbol>{</symbol>
	<classVarDec>
		<keyword>static</keyword>
		<keyword>boolean</keyword>
		<identifier>test</identifier>
		<symbol>;</symbol>
	</classVarDec>
	<subroutineDec>
		<keyword>function</keyword>
		<keyword>void</keyword>
		<identifier>main</identifier>
		<symbol>(</symbol>
		<parameterList>
</parameterList>
		<symbol>)</symbol>
		<subroutineBody>
			<symbol>{</symbol>
			<varDec>
				<keyword>var</keyword>
				<keyword>SquareGame</keyword>
				<identifier>game</identifier>
				<symbol>;</symbol>
			</varDec>
			<USEDvar0>game</USEDvar0>
			<statements>
				<letStatement>
					<keyword>let</keyword>
					<identifier>game</identifier>
					<symbol>=</symbol>
					<expression>
						<term>
							<identifier>SquareGame</identifier>
							<symbol>.</symbol>
							<identifier>new</identifier>
							<symbol>(</symbol>
							<expressionList>
</expressionList>
							<symbol>)</symbol>
						</term>
					</expression>
					<symbol>;</symbol>
				</letStatement>
				<doStatement>
					<keyword>do</keyword>
					<identifier>game</identifier>
					<symbol>.</symbol>
					<identifier>run</identifier>
					<symbol>(</symbol>
					<expressionList>
</expressionList>
					<symbol>)</symbol>
					<symbol>;</symbol>
				</doStatement>
				<doStatement>
					<keyword>do</keyword>
					<identifier>game</identifier>
					<symbol>.</symbol>
					<identifier>dispose</identifier>
					<symbol>(</symbol>
					<expressionList>
</expressionList>
					<symbol>)</symbol>
					<symbol>;</symbol>
				</doStatement>
				<returnStatement>
					<keyword>return</keyword>
					<symbol>;</symbol>
				</returnStatement>
			</statements>
			<symbol>}</symbol>
		</subroutineBody>
	</subroutineDec>
	<subroutineDec>
		<keyword>function</keyword>
		<keyword>void</keyword>
		<identifier>test</identifier>
		<symbol>(</symbol>
		<parameterList>
</parameterList>
		<symbol>)</symbol>
		<subroutineBody>
			<symbol>{</symbol>
			<varDec>
				<keyword>var</keyword>
				<keyword>int</keyword>
				<identifier>i</identifier>
				<symbol>,</symbol>
				<identifier>j</identifier>
				<symbol>;</symbol>
			</varDec>
			<USEDvar0>i</USEDvar0>
			<USEDvar1>j</USEDvar1>
			<varDec>
				<keyword>var</keyword>
				<keyword>String</keyword>
				<identifier>s</identifier>
				<symbol>;</symbol>
			</varDec>
			<USEDvar2>s</USEDvar2>
			<varDec>
				<keyword>var</keyword>
				<keyword>Array</keyword>
				<identifier>a</identifier>
				<symbol>;</symbol>
			</varDec>
			<USEDvar3>a</USEDvar3>
			<statements>
				<ifStatement>
					<keyword>if</keyword>
					<symbol>(</symbol>
					<expression>
						<term>
							<keyword>false</keyword>
						</term>
					</expression>
					<symbol>)</symbol>
					<symbol>{</symbol>
					<statements>
						<letStatement>
							<keyword>let</keyword>
							<identifier>s</identifier>
							<symbol>=</symbol>
							<expression>
								<term>
									<stringConstant>stringconstant</stringConstant>
								</term>
							</expression>
							<symbol>;</symbol>
						</letStatement>
						<letStatement>
							<keyword>let</keyword>
							<identifier>s</identifier>
							<symbol>=</symbol>
							<expression>
								<term>
									<keyword>null</keyword>
								</term>
							</expression>
							<symbol>;</symbol>
						</letStatement>
						<letStatement>
							<keyword>let</keyword>
							<identifier>a</identifier>
							<symbol>[</symbol>
							<expression>
								<term>
									<integerConstant>1</integerConstant>
								</term>
							</expression>
							<symbol>]</symbol>
							<symbol>=</symbol>
							<expression>
								<term>
									<identifier>a</identifier>
									<symbol>[</symbol>
									<expression>
										<term>
											<integerConstant>2</integerConstant>
										</term>
									</expression>
									<symbol>]</symbol>
								</term>
							</expression>
							<symbol>;</symbol>
						</letStatement>
					</statements>
					<symbol>}</symbol>
					<keyword>else</keyword>
					<symbol>{</symbol>
					<statements>
						<letStatement>
							<keyword>let</keyword>
							<identifier>i</identifier>
							<symbol>=</symbol>
							<expression>
								<term>
									<identifier>i</identifier>
								</term>
								<symbol>*</symbol>
								<term>
									<symbol>(</symbol>
									<expression>
										<term>
											<symbol>-</symbol>
											<term>
												<identifier>j</identifier>
											</term>
										</term>
									</expression>
									<symbol>)</symbol>
								</term>
							</expression>
							<symbol>;</symbol>
						</letStatement>
						<letStatement>
							<keyword>let</keyword>
							<identifier>j</identifier>
							<symbol>=</symbol>
							<expression>
								<term>
									<identifier>j</identifier>
								</term>
								<symbol>/</symbol>
								<term>
									<symbol>(</symbol>
									<expression>
										<term>
											<symbol>-</symbol>
											<term>
												<integerConstant>2</integerConstant>
											</term>
										</term>
									</expression>
									<symbol>)</symbol>
								</term>
							</expression>
							<symbol>;</symbol>
						</letStatement>
						<letStatement>
							<keyword>let</keyword>
							<identifier>i</identifier>
							<symbol>=</symbol>
							<expression>
								<term>
									<identifier>i</identifier>
								</term>
								<symbol>|</symbol>
								<term>
									<identifier>j</identifier>
								</term>
							</expression>
							<symbol>;</symbol>
						</letStatement>
					</statements>
					<symbol>}</symbol>
				</ifStatement>
				<returnStatement>
					<keyword>return</keyword>
					<symbol>;</symbol>
				</returnStatement>
			</statements>
			<symbol>}</symbol>
		</subroutineBody>
	</subroutineDec>
	<symbol>}</symbol>
</class>
